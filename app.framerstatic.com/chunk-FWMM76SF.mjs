import{v as M}from"https://app.framerstatic.com/chunk-PNIOO2GU.mjs";import{j as i}from"https://app.framerstatic.com/chunk-AHQIRSXG.mjs";var c;(n=>{n.onewayRequestId="oneway",n.onewayStreamResponseIdPrefix="#oneway:";let s;(p=>(p.Request="request",p.Response="response",p.Error="error"))(s=n.MessageType||={});function r(a){return typeof a!="object"?!1:a.type==="request"||a.type==="response"||a.type==="error"}n.isMessage=r})(c||={});var d;(e=>e.log=M("\u{1F4A9} fallback-logger-please-reassign:services"))(d||={});(n=>{n._isTesting=!1;let e;async function s(a,m){if(!n._isTesting)throw new Error("ServiceManager.isTesting must be true to use testWithShared()");if(e)throw new Error("ServiceManager.testWithShared() may not be nested");try{return e=a,await m()}finally{e=void 0}}n._testWithShared=s;function r(){if(n._isTesting){if(e)return e;throw new Error("ServiceManager.shared() may not be used while testing. Use testWithShared() for explicitness.")}}n._sharedServiceManagerIfTesting=r})(d||={});var t=typeof window>"u"?void 0:window,l="data:origin-not-initialized",g=class g{constructor(e,s){this.target=e;i(this,"trustedOrigin",l);i(this,"disabled");i(this,"listeners",new Set);i(this,"onMessageEvent",e=>{this.log.trace(e.data,e.origin);let s=!1;if(e.source!==this.target)if(this===o&&e.source===t&&e.data?.__sourceRepresentsParentFrame)s=!0;else return;if(!s&&e.origin!==this.trustedOrigin&&this.trustedOrigin!=="*")throw this.trustedOrigin?new Error(`PostMessageChannel received a message with origin ${e.origin}, expected ${this.trustedOrigin}`):new Error(`PostMessageChannel received a message with origin ${e.origin}, but has not been configured with initializeTrustedOrigin`);if(this.interceptor?.handleRawEvent(e))return;let r=e.data;if(c.isMessage(r))for(let n of this.listeners)n(r)});i(this,"interceptor");let r=g.targetRepresentingParentFrame;if(e===(t?t.parent:void 0)||e===r){if(!u||o!==void 0)throw new Error("PostMessageChannel.toParentFrame must be used instead of initializing with window.parent.");if(t)t.parent!==t?this.target=t.parent:(this.target=r,this.disabled=r.disabled);else{this.target={postMessage:(...n)=>{this.log.debug("postMessage to parent channel not running in a DOM environment: ",n)}};return}}s!==l&&this.initializeTrustedOrigin(s)}get log(){return d.log.extend("PostMessageChannel")}static get toParentFrame(){return u=!0,o=o??new g(g.targetRepresentingParentFrame,l),u=!1,o}initializeTrustedOrigin(e){if(this.trustedOrigin!==l&&!(this===o&&e===this.trustedOrigin))throw new Error("PostMessageChannel can only be initialized with a trusted origin once");if(e!=="*"){if(!e.includes("://"))throw new Error(`PostMessageChannel can only be initialized with a concrete origin (https://...); received ${e}`)}this.trustedOrigin=e}postMessage(e){this.log.trace("\u2197\uFE0E",e),this.target.postMessage(e,this.trustedOrigin)}postMessageRaw(e){this.target.postMessage(e,this.trustedOrigin)}addMessageListener(e){this.listeners.size===0&&t?.addEventListener("message",this.onMessageEvent,!1),this.listeners.add(e)}removeMessageListener(e){this.listeners.delete(e),this.listeners.size===0&&t?.removeEventListener("message",this.onMessageEvent,!1)}static interceptMessageEventsFromOpenerFrame(e){w.setInterceptor(e)}setInterceptor(e){this.interceptor&&this.removeMessageListener(this.interceptor.unusedMessageListenerOnlyForCounting),this.interceptor=e?{handleRawEvent:e,unusedMessageListenerOnlyForCounting:()=>{}}:void 0,this.interceptor&&this.addMessageListener(this.interceptor.unusedMessageListenerOnlyForCounting)}};i(g,"targetRepresentingParentFrame",(()=>{let e="__targetRepresentingParentFrame",s=t?.[e]??t?.webkit?.messageHandlers?.[e];return{disabled:!s,postMessage:(...r)=>{if(t){if(!s)throw new Error(`Can't find window.parent or ${e} message handler`)}else throw new Error("PostMessageChannel requires a DOM environment");s.postMessage(...r)}}})());var h=g,u=!1,o,v=h.toParentFrame,w=t&&t.opener&&t!==t.opener&&t.parent===t?new h(t.opener,l):v;export{c as a,d as b,h as c,v as d,w as e};
//# sourceMappingURL=https://app.framerstatic.com/chunk-FWMM76SF.mjs.map
