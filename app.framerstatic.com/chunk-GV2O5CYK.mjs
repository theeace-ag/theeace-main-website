import{a as L}from"https://app.framerstatic.com/chunk-AXBRCIOZ.mjs";import{a as $,b as q}from"https://app.framerstatic.com/chunk-5TPR7O6J.mjs";import{b as k}from"https://app.framerstatic.com/chunk-RN5JFL7R.mjs";import{b as M}from"https://app.framerstatic.com/chunk-PGNJ6YYR.mjs";import{b as S,c as C}from"https://app.framerstatic.com/chunk-KU5DUMHH.mjs";import{e as j}from"https://app.framerstatic.com/chunk-D7MEQ7Y3.mjs";import{i as o}from"https://app.framerstatic.com/chunk-R3IAJKKE.mjs";import{a as g}from"https://app.framerstatic.com/chunk-7GSEC7H4.mjs";import{p as P}from"https://app.framerstatic.com/chunk-65XKJBP2.mjs";import{i as w}from"https://app.framerstatic.com/chunk-ZQUNXESX.mjs";import{a as B}from"https://app.framerstatic.com/chunk-NIDOI5EE.mjs";import{h as R}from"https://app.framerstatic.com/chunk-AGVZOAU6.mjs";import{e as I,s as m,v as A}from"https://app.framerstatic.com/chunk-PNIOO2GU.mjs";import{a as v,b}from"https://app.framerstatic.com/chunk-WNSBRACC.mjs";import{e as x,j as l}from"https://app.framerstatic.com/chunk-AHQIRSXG.mjs";var U=class{constructor(e,s){this.api=e;this.socket=s;l(this,"emitter",new R);s.onMessage(async t=>{if(t.type!=="moduleEvents")return;let a=await Promise.all(t.value.events.map(async r=>{switch(r.type){case"delete":return r;case"save":return{type:"save",module:await e.getModule({moduleId:r.id})};default:b(r)}}));this.emitter.emit({events:a})})}notify(e){this.socket.send({type:"moduleEvents",value:{events:e}})}async create(e){let s=await this.api.createModule(e);return this.notify([{type:"save",id:s.id,saveId:s.saveId}]),s}async delete(e){let s=await this.api.deleteModule(e);return this.notify([{type:"delete",id:s.id}]),s}async getModuleDependencies(e){return this.api.getModuleDependencies(e)}async list(e){return this.api.listModules(e)}async listNamespaces(){return this.api.listNamespaces()}async listPublishedModules(e){return this.api.listPublishedModules(e)}async lookUpModules(e){return this.api.lookUpModules(e)}async publish(e){return this.api.publishModule(e)}async save(e){let s=await this.api.saveModule(e);return this.notify([{type:"save",id:s.id,saveId:s.saveId}]),s}async saveBatch(e){let s=await this.api.saveModules(e);return this.notify(s.data.map(t=>({type:"save",id:t.id,saveId:t.saveId}))),s}async update(e){let s=await this.api.updateModule(e);return this.notify([{type:"save",id:s.id,saveId:s.saveId}]),s}moduleEventsStream(e){return this.emitter.newStream(e)}async createNamespace(e){return this.api.createNamespace(e)}};var u=x(B());async function N(c,e,s,t){let a=`upload${Math.random()}`;try{t({type:"add",key:a,variant:"progress",icon:s,text:"Uploading remote file\u2026",duration:1/0,showCloseButton:"never"});let r=await o.post(c,{url:e});return t({type:"add",key:a,variant:"success",text:"File has been uploaded",duration:1e4,icon:"success",moveToTop:!0}),r}catch(r){throw t({type:"add",key:a,variant:"error",text:"Error uploading file",duration:3e4,icon:"error",moveToTop:!0}),r}}var d=A("useAPI"),W=j()&&navigator.userAgent.includes("Version/16"),E=window.CompressionStream&&!W,h=class extends Error{},y=class{constructor(e,s,t=g){this.socket=e;this.projectId=s;this.dispatch=t;l(this,"apiBaseURL",m().api);l(this,"packagesPerPage",36)}wait(e){o.wait(e)}normalizeRole(e){return e==="contentCollaborator"&&!P.isOn("contentEditor")?"collaborator":e}getACL(){o.get(`/web/projects/${this.projectId}/acl/`).then(({users:e,invites:s,accessRequests:t})=>{let a=e.map(i=>({...i,kind:"user",role:this.normalizeRole(i.role),permissions:i.permissions})),r=s.map(i=>({...i,kind:"invite",role:this.normalizeRole(i.role),permissions:i.permissions}));this.dispatch({type:"resetACL",acl:[...a,...r],accessRequests:t.map(i=>({...i,kind:"accessRequest"}))})}).catch(e=>d.error("Failed to get ACL:",e))}setInitialProject(e){e.then(s=>{this.dispatch({type:"setProject",project:s})}).catch(s=>d.error("Failed to set initial project:",s))}getProject(){o.get(`/web/projects/${this.projectId}`,{includeUsageData:"true"}).then(e=>{this.dispatch({type:"setProject",project:e})}).catch(e=>d.error("Failed to get project:",e))}async pollProject({intervalMillis:e,attempts:s,stopCondition:t}){for(let a=0;a<s;++a){let r=await o.get(`/web/projects/${this.projectId}`,{includeUsageData:"true"});if(t(r)){this.dispatch({type:"setProject",project:r}),this.notifyProjectChange("metadata");return}await I(e)}throw new h("pollProject exceeded the number of attempts")}async invite(e){let s=await $(this.projectId,e);return s.status===0&&(this.dispatch({type:"updateACL",acl:[s.aclEntry]}),this.notifyProjectChange("acl")),s}async removeInvite({id:e}){await o.deleteRaw(`/web/projects/${this.projectId}/invites/${e}`),this.notifyProjectChange("acl"),this.getACL()}async updateUserPermissions(e){let s=await q(this.projectId,e);return s.status===0&&(this.notifyProjectChange("acl"),this.getACL()),s}async requestAccess(e){let s=await L(e);return this.notifyProjectChange("acl"),s}async grantProjectAccessRequest({id:e}){let s=await S(e);return s.status===0&&(this.notifyProjectChange("acl"),this.getACL()),s}async denyProjectAccessRequest({id:e}){let s=await C(e);return s.status===0&&(this.notifyProjectChange("acl"),this.getACL()),s}async forceRefreshACL(){this.notifyProjectChange("acl"),this.getACL()}async removeUserPermissions({id:e}){await o.deleteRaw(`/web/projects/${this.projectId}/acl/${e}`),this.notifyProjectChange("acl"),this.getACL()}async updateProject(e,s=!0){s&&this.dispatch({type:"updateProject",changes:e});try{await k(this.projectId,e),this.getProject(),this.notifyProjectChange("metadata")}catch(t){throw d.error("Failed to update project:",t),t}}async subscribeToNotifications(){await o.postRaw(`/web/projects/${this.projectId}/threads/notifications/subscribe`)}async unsubscribeFromNotifications(){await o.postRaw(`/web/projects/${this.projectId}/threads/notifications/unsubscribe`)}async getAssets(e={}){let{updatedFrom:s}=e,t=P.isOn("listAssetsV2"),a=P.isOn("listAssetsPartialRefresh"),r=t?`/web/v2/projects/${this.projectId}/assets/`:`/web/projects/${this.projectId}/assets/`;if(s&&t&&a){let n=new URLSearchParams({updatedFrom:s});r+=`?${n.toString()}`}let i=await o.get(r);if(!Array.isArray(i.assets)){let n=new Error("malformed /projects/./assets/ response");throw d.reportError(n,i),n}return i}async uploadAsset(e,{maxFileSize:s,onExceedsCustomMaxSize:t,onToast:a=g}={}){let r=new URL(`/web/projects/${this.projectId}/assets`,this.apiBaseURL).href,i=await M({endpoint:r,fieldName:"file",file:e,icon:"image",onToast:a,customMaxSize:s,onExceedsCustomMaxSize:t});return i&&this.notifyProjectChange("assets"),i}async uploadAssetByURL(e,s=g){let t=await N(`/web/projects/${this.projectId}/assets/fetch`,e,"image",s);return t&&this.notifyProjectChange("assets"),t}async duplicateAssets(e,s){if(this.projectId===s)return d.warn("Attempted to duplicate assets for current project"),[];let t=await o.post(`/web/projects/${this.projectId}/assets/duplicate`,{sourceProjectId:s,keys:e});return t&&this.notifyProjectChange("assets"),t.assets}async duplicateWorkspaceAssets(e,s){let t=await o.post(`/web/projects/${this.projectId}/assets/duplicate`,{sourceTeamId:s,keys:e});return t&&this.notifyProjectChange("assets"),t.assets}async deleteAssets(e){let s=await o.delete(`/web/projects/${this.projectId}/assets/batch`,{keys:e});return this.notifyProjectChange("assetsInvalidated"),s}async createModule(e){let s=new FormData;return this.addModuleRequestToForm(e,s),await o.postRaw("/modules/v1/modules/",s).then(a=>a.json())}async deleteModule({moduleId:e}){return await o.deleteRaw(`/modules/v1/modules/${e}`).then(t=>t.json())}async getModule({moduleId:e,saveId:s}){let t;return s?t=`/modules/v1/modules/${e}/saves/${s}`:t=`/modules/v1/modules/${e}`,o.get(t)}async getModuleDependencies({moduleId:e,saveId:s}){return o.get(`/modules/v1/modules/${e}/saves/${s}/dependencies/`)}async listModules({types:e}={}){let s=new URLSearchParams;if(e)for(let a of e)s.append("type",a);return await o.get(`/modules/v1/modules/?${s.toString()}`,{projectId:this.projectId})}async listNamespaces(){return await o.get("/modules/v1/namespaces/")}async createNamespace(e){return await o.post("/modules/v1/namespaces/",e)}async listPublishedModules({namespace:e}){let s=`/modules/v1/modules/namespaces/${encodeURIComponent(e)}/published/`;return await o.get(s)}async lookUpModules(e){return o.post("/modules/v1/modules/batch/lookup/",e)}async publishModule({namespace:e,name:s,...t}){let a=`/modules/v1/namespaces/${encodeURIComponent(e)}/published/${encodeURIComponent(s)}`;return await o.post(a,t)}async updateModule({moduleId:e,...s}){return await o.post(`/modules/v1/modules/${e}`,s)}async saveModule(e){let s=new FormData;return await this.addModuleRequestToForm(e,s),await o.postRaw(`/modules/v1/modules/${e.moduleId}/saves/`,s).then(a=>a.json())}async saveModules({batch:e}){let s=new FormData;return await Promise.all(e.map(a=>this.addModuleRequestToForm(a,s))),await o.postRaw("/modules/v1/modules/batch/saves/",s).then(a=>a.json())}async addModuleRequestToForm(e,s){let{files:t,...a}=e,r=s.getAll("metadata").length;E&&window.CompressionStream&&(a.transferEncoding="gzip"),s.append("metadata",JSON.stringify({...a,projectId:this.projectId,files:t.map(({content:i,bytes:n,...p})=>p)})),await Promise.all(t.map(async i=>{let n=i.content??i.bytes;v(!w(n),"File needs content or bytes");let p=new Blob([n]);if(E&&window.CompressionStream){let F=new window.CompressionStream("gzip"),T=p.stream();p=await new Response(T.pipeThrough(F)).blob();let f=n.length-p.size,D=f/n.length*100;d.debug("Saved",f,"bytes",`(${D.toFixed(1)}%)`,"compressing",i.name)}s.append(`files[${r}]`,new File([p],i.name))}))}async getFileList(){return o.getRaw(`/web/vekter/projects/${this.projectId}/files`)}async getFile(e){return o.getRaw(`/web/vekter/projects/${this.projectId}/files/${e}`)}async saveFile(e,s){let t=new FormData,a=new File([s],e,{type:"text/plain"});return t.set("file",a),o.postRaw(`/web/vekter/projects/${this.projectId}/files/${e}`,t,void 0)}async deleteFile(e){return o.deleteRaw(`/web/vekter/projects/${this.projectId}/files/${e}`)}async getBuildOutput(e){return o.getRaw(`/web/projects/${this.projectId}/files/${e}`)}async getPackage(e){let{fromPublicPackages:s,packageName:t}=e;return o.get(`/store/packages${s?"":"/private"}/${t}`)}async deletePackage(e){let{fromPublicPackages:s,packageName:t}=e;await o.deleteRaw(`/store/packages${s?"":"/private"}/${t}`)}async getPackageVersionStatus(e){let{isPrivate:s,packageName:t,version:a}=e;return o.get(`/store/packages${s?"/private":""}/${t}/version/${a}`)}async preflightPackage(e){let{fromPublicPackages:s,body:t}=e;return o.post(`/store/packages${s?"":"/private"}/preflight`,t)}async findPackage(e){let{fromPublicPackages:s,friendlyName:t,spaceId:a}=e;return o.getRaw(`/store/packages${s?"":"/private"}/find-by-slugify`,{name:t,spaceId:a})}async findPackages(e){let{fromPublicPackages:s,query:t,offset:a,spaceIds:r}=e;return o.getRaw(`/store/packages${s?"":"/private"}/search`,{query:t,offset:a,limit:this.packagesPerPage,spaceIds:r})}async favoritePackage(e){let{fromPublicPackages:s,packageName:t}=e;return o.postRaw(`/store/packages${s?"":"/private"}/${t}/favorite`)}async unfavoritePackage(e){let{fromPublicPackages:s,packageName:t}=e;return o.deleteRaw(`/store/packages${s?"":"/private"}/${t}/favorite`)}async getPackages(e){let{fromPublicPackages:s,section:t,offset:a,spaceIds:r}=e;return o.getRaw(`/store/packages${s?"":"/private"}/${t||""}`,{offset:a,limit:this.packagesPerPage,spaceIds:r})}async getPopularPackages(e){let{fromPublicPackages:s,offset:t,days:a,spaceIds:r}=e;return o.getRaw(`/store/packages${s?"":"/private"}/popular`,{offset:t,days:a,limit:this.packagesPerPage,spaceIds:r})}async getFeaturedPackages(e){let{fromPublicPackages:s,offset:t}=e;return o.getRaw(`/store/packages${s?"":"/private"}/`,{featured:!0,offset:t,limit:this.packagesPerPage})}async getPublisherPackages(e){let{publisherId:s,offset:t}=e;return o.getRaw(`/store/packages/published-by/${s}`,{offset:t,limit:this.packagesPerPage})}async getTrendingPackages(){return o.getRaw("/store/packages/trending")}async getPackagesMetadata(e){return o.post("/store/meta/get-many",e)}async listPhotos(e){return o.get("/web/unsplash/photos",e)}async searchPhotos(e){return o.get("/web/unsplash/search/photos",e)}async getRandomPhoto(e){return o.get("/web/unsplash/photos/random",e)}async downloadPhoto(e){return o.get(`/web/unsplash/photos/${e.id}/download`)}notifyProjectChange(e){this.socket.send({type:"notifyProjectChange",value:{scope:e}})}};function Pe(c,e,s){let t=(0,u.useMemo)(()=>new y(c,e.projectId,s),[c,e.projectId,s]);(0,u.useEffect)(()=>{t.getACL()},[t]);let a=(0,u.useRef)(e);return a.current=e,(0,u.useEffect)(()=>c.onMessage(r=>{let i=a.current;if(r.type==="join"){if(i.aclById[r.id])return}else if(r.type==="welcome"){if(i.acl.length===0)return;let n=!1;for(let p of i.activeIds)if(!i.aclById[p]){n=!0;break}if(!n)return}else return;t.getACL()}),[t,c]),t}function fe(c){let e=m(),s=new URL(e.app);return s.protocol=s.protocol==="http:"?"ws:":"wss:",s.pathname=`/projects/${c}/socket`,s.href}export{U as a,y as b,Pe as c,fe as d};
//# sourceMappingURL=https://app.framerstatic.com/chunk-GV2O5CYK.mjs.map
