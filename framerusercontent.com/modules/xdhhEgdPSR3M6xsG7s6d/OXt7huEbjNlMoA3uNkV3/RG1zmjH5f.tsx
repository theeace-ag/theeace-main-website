// Generated by Framer (461de17)

import { addFonts, addPropertyControls, ComponentViewportProvider, ControlType, cx, CycleVariantState, getFonts, Link, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import ButtonFlipText from "./z6NWtS2K1";
const ButtonFlipTextFonts = getFonts(ButtonFlipText);

const enabledGestures = {K7IblRph_: {hover: true}};

const cycleOrder = ["K7IblRph_"];

const serializationHash = "framer-LVobc"

const variantClassNames = {K7IblRph_: "framer-v-1sf21zn"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const transition1 = {damping: 60, delay: 0, mass: 1, stiffness: 500, type: "spring"}

const Transition = ({value, children}) => {
const config = React.useContext(MotionConfigContext)
const transition = value ?? config.transition
const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)])
return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}

const Variants = motion(React.Fragment)

const getProps = ({height, id, link, socialTitle, width, ...props}) => { return {...props, fglz8zcmL: socialTitle ?? props.fglz8zcmL ?? "SC", uxYn6dwxh: link ?? props.uxYn6dwxh} }

const createLayoutDependency = (props, variants) => {if (props.layoutDependency) return variants.join('-') + props.layoutDependency
return variants.join('-')}

export interface Props extends React.HTMLAttributes<HTMLDivElement> { style?: Record<string, unknown>;className?: string;layoutId?: string | number;socialTitle?: string;link?: string; }

const Component = React.forwardRef<HTMLDivElement, Props>(function(props, ref) {

const { activeLocale, setLocale } = useLocaleInfo()

const {style, className, layoutId, variant, fglz8zcmL, uxYn6dwxh, ...restProps} = getProps(props)

const {baseVariant, classNames, gestureHandlers, gestureVariant, setGestureState, setVariant, variants} = useVariantState({cycleOrder, defaultVariant: "K7IblRph_", enabledGestures, variant, variantClassNames})

const layoutDependency = createLayoutDependency(props, variants)

const ref1 = React.useRef<HTMLElement>(null)

const defaultLayoutId = React.useId()

const sharedStyleClassNames = []

const componentViewport = useComponentViewport()

return (<LayoutGroup id={layoutId ?? defaultLayoutId}>
<Variants animate={variants} initial={false}><Transition value={transition1}><Link href={uxYn6dwxh}><motion.a {...restProps} {...gestureHandlers} className={`${cx(serializationHash, ...sharedStyleClassNames, "framer-1sf21zn", className, classNames)} framer-otpv3e`} data-border data-framer-name={"Desktop"} layoutDependency={layoutDependency} layoutId={"K7IblRph_"} ref={ref ?? ref1} style={{"--border-bottom-width": "1px", "--border-color": "var(--token-bf997199-91cd-42a6-a8e1-771f0f312716, rgba(255, 255, 255, 0.05))", "--border-left-width": "1px", "--border-right-width": "1px", "--border-style": "solid", "--border-top-width": "1px", backgroundColor: "var(--token-fa5f9a3c-b489-4199-8efa-0465a18eaa34, rgba(255, 255, 255, 0.03))", borderBottomLeftRadius: 4, borderBottomRightRadius: 4, borderTopLeftRadius: 4, borderTopRightRadius: 4, ...style}} variants={{"K7IblRph_-hover": {"--border-color": "var(--token-631b4057-07c3-4ea7-9517-eb324f4dea67, rgb(0, 102, 255))", backgroundColor: "var(--token-631b4057-07c3-4ea7-9517-eb324f4dea67, rgb(0, 102, 255))"}}} {...addPropertyOverrides({"K7IblRph_-hover": {"data-framer-name": undefined}}, baseVariant, gestureVariant)}><ComponentViewportProvider ><motion.div className={"framer-61fg57-container"} layoutDependency={layoutDependency} layoutId={"LAmbdMAhK-container"}><ButtonFlipText height={"100%"} id={"LAmbdMAhK"} layoutId={"LAmbdMAhK"} NzbwAfCQt={fglz8zcmL} variant={"E7RKGb7An"} width={"100%"} {...addPropertyOverrides({"K7IblRph_-hover": {variant: "iDFZsBGXT"}}, baseVariant, gestureVariant)}/></motion.div></ComponentViewportProvider></motion.a></Link></Transition></Variants>
</LayoutGroup>)

});

const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-LVobc.framer-otpv3e, .framer-LVobc .framer-otpv3e { display: block; }", ".framer-LVobc.framer-1sf21zn { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 32px; justify-content: center; overflow: hidden; padding: 0px; position: relative; text-decoration: none; width: 32px; will-change: var(--framer-will-change-override, transform); }", ".framer-LVobc .framer-61fg57-container { flex: none; height: auto; position: relative; width: auto; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-LVobc.framer-1sf21zn { gap: 0px; } .framer-LVobc.framer-1sf21zn > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-LVobc.framer-1sf21zn > :first-child { margin-left: 0px; } .framer-LVobc.framer-1sf21zn > :last-child { margin-right: 0px; } }", ".framer-LVobc.framer-v-1sf21zn.hover.framer-1sf21zn { aspect-ratio: 1 / 1; height: var(--framer-aspect-ratio-supported, 32px); }", ".framer-LVobc[data-border=\"true\"]::after, .framer-LVobc [data-border=\"true\"]::after { content: \"\"; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }"]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 32
 * @framerIntrinsicWidth 32
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","fixed"]},"pwC2kUSVv":{"layout":["fixed","fixed"]}}}
 * @framerVariables {"fglz8zcmL":"socialTitle","uxYn6dwxh":"link"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerComponentViewportWidth true
 */
const FramerRG1zmjH5f: React.ComponentType<Props> = withCSS(Component, css, "framer-LVobc") as typeof Component;
export default FramerRG1zmjH5f;

FramerRG1zmjH5f.displayName = "Button/Social";

FramerRG1zmjH5f.defaultProps = {height: 32, width: 32};

addPropertyControls(FramerRG1zmjH5f, {fglz8zcmL: {defaultValue: "SC", displayTextArea: false, title: "Social Title", type: ControlType.String}, uxYn6dwxh: {title: "Link", type: ControlType.Link}} as any)

addFonts(FramerRG1zmjH5f, [{explicitInter: true, fonts: []}, ...ButtonFlipTextFonts], {supportsExplicitInterCodegen: true})