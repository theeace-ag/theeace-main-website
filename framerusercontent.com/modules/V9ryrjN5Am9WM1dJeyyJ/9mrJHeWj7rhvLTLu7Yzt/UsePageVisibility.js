import{useState,useEffect}from"react";export const isBrowser=()=>typeof document==="object";export function getBrowserVisibilityProp(){if(!isBrowser())return;if(typeof document.hidden!=="undefined"){// Opera 12.10 and Firefox 18 and later support
return"visibilitychange";}else if(typeof document.msHidden!=="undefined"){return"msvisibilitychange";}else if(typeof document.webkitHidden!=="undefined"){return"webkitvisibilitychange";}}export function getBrowserDocumentHiddenProp(){if(!isBrowser())return;if(typeof document.hidden!=="undefined"){return"hidden";}else if(typeof document.msHidden!=="undefined"){return"msHidden";}else if(typeof document.webkitHidden!=="undefined"){return"webkitHidden";}}export function getIsDocumentHidden(){if(!isBrowser())return;return!document[getBrowserDocumentHiddenProp()];}export function usePageVisibility(){if(!isBrowser())return;const[isVisible,setIsVisible]=useState(getIsDocumentHidden());const onVisibilityChange=()=>setIsVisible(getIsDocumentHidden());useEffect(()=>{const visibilityChange=getBrowserVisibilityProp();document.addEventListener(visibilityChange,onVisibilityChange,false);return()=>{document.removeEventListener(visibilityChange,onVisibilityChange);};});return isVisible;}
export const __FramerMetadata__ = {"exports":{"getBrowserVisibilityProp":{"type":"function","annotations":{"framerContractVersion":"1"}},"getIsDocumentHidden":{"type":"function","annotations":{"framerContractVersion":"1"}},"usePageVisibility":{"type":"function","annotations":{"framerContractVersion":"1"}},"isBrowser":{"type":"variable","annotations":{"framerContractVersion":"1"}},"getBrowserDocumentHiddenProp":{"type":"function","annotations":{"framerContractVersion":"1"}},"__FramerMetadata__":{"type":"variable"}}}
//# sourceMappingURL=./UsePageVisibility.map